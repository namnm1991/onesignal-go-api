/*
OneSignal

A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com

API version: 1.0.1
Contact: devrel@onesignal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onesignal

import (
	"encoding/json"
)

// InlineResponse4003 struct for InlineResponse4003
type InlineResponse4003 struct {
	Erorrs []string `json:"erorrs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InlineResponse4003 InlineResponse4003

// NewInlineResponse4003 instantiates a new InlineResponse4003 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse4003() *InlineResponse4003 {
	this := InlineResponse4003{}
	return &this
}

// NewInlineResponse4003WithDefaults instantiates a new InlineResponse4003 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse4003WithDefaults() *InlineResponse4003 {
	this := InlineResponse4003{}
	return &this
}

// GetErorrs returns the Erorrs field value if set, zero value otherwise.
func (o *InlineResponse4003) GetErorrs() []string {
	if o == nil || o.Erorrs == nil {
		var ret []string
		return ret
	}
	return o.Erorrs
}

// GetErorrsOk returns a tuple with the Erorrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse4003) GetErorrsOk() ([]string, bool) {
	if o == nil || o.Erorrs == nil {
		return nil, false
	}
	return o.Erorrs, true
}

// HasErorrs returns a boolean if a field has been set.
func (o *InlineResponse4003) HasErorrs() bool {
	if o != nil && o.Erorrs != nil {
		return true
	}

	return false
}

// SetErorrs gets a reference to the given []string and assigns it to the Erorrs field.
func (o *InlineResponse4003) SetErorrs(v []string) {
	o.Erorrs = v
}

func (o InlineResponse4003) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Erorrs != nil {
		toSerialize["erorrs"] = o.Erorrs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *InlineResponse4003) UnmarshalJSON(bytes []byte) (err error) {
	varInlineResponse4003 := _InlineResponse4003{}

	if err = json.Unmarshal(bytes, &varInlineResponse4003); err == nil {
		*o = InlineResponse4003(varInlineResponse4003)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "erorrs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInlineResponse4003 struct {
	value *InlineResponse4003
	isSet bool
}

func (v NullableInlineResponse4003) Get() *InlineResponse4003 {
	return v.value
}

func (v *NullableInlineResponse4003) Set(val *InlineResponse4003) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse4003) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse4003) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse4003(val *InlineResponse4003) *NullableInlineResponse4003 {
	return &NullableInlineResponse4003{value: val, isSet: true}
}

func (v NullableInlineResponse4003) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse4003) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


